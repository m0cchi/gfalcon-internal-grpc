// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/gfalcon.proto

package gfalcon

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SignInRequest struct {
	Team                 string   `protobuf:"bytes,1,opt,name=team,proto3" json:"team,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Password             string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignInRequest) Reset()         { *m = SignInRequest{} }
func (m *SignInRequest) String() string { return proto.CompactTextString(m) }
func (*SignInRequest) ProtoMessage()    {}
func (*SignInRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_gfalcon_c819ad18ad9b78da, []int{0}
}
func (m *SignInRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignInRequest.Unmarshal(m, b)
}
func (m *SignInRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignInRequest.Marshal(b, m, deterministic)
}
func (dst *SignInRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignInRequest.Merge(dst, src)
}
func (m *SignInRequest) XXX_Size() int {
	return xxx_messageInfo_SignInRequest.Size(m)
}
func (m *SignInRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignInRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SignInRequest proto.InternalMessageInfo

func (m *SignInRequest) GetTeam() string {
	if m != nil {
		return m.Team
	}
	return ""
}

func (m *SignInRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SignInRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type SignInResponse struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Iid                  uint32   `protobuf:"varint,2,opt,name=iid,proto3" json:"iid,omitempty"`
	Session              string   `protobuf:"bytes,3,opt,name=session,proto3" json:"session,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignInResponse) Reset()         { *m = SignInResponse{} }
func (m *SignInResponse) String() string { return proto.CompactTextString(m) }
func (*SignInResponse) ProtoMessage()    {}
func (*SignInResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_gfalcon_c819ad18ad9b78da, []int{1}
}
func (m *SignInResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignInResponse.Unmarshal(m, b)
}
func (m *SignInResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignInResponse.Marshal(b, m, deterministic)
}
func (dst *SignInResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignInResponse.Merge(dst, src)
}
func (m *SignInResponse) XXX_Size() int {
	return xxx_messageInfo_SignInResponse.Size(m)
}
func (m *SignInResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SignInResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SignInResponse proto.InternalMessageInfo

func (m *SignInResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *SignInResponse) GetIid() uint32 {
	if m != nil {
		return m.Iid
	}
	return 0
}

func (m *SignInResponse) GetSession() string {
	if m != nil {
		return m.Session
	}
	return ""
}

type CheckRequest struct {
	Iid                  uint32   `protobuf:"varint,1,opt,name=iid,proto3" json:"iid,omitempty"`
	Session              string   `protobuf:"bytes,2,opt,name=session,proto3" json:"session,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckRequest) Reset()         { *m = CheckRequest{} }
func (m *CheckRequest) String() string { return proto.CompactTextString(m) }
func (*CheckRequest) ProtoMessage()    {}
func (*CheckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_gfalcon_c819ad18ad9b78da, []int{2}
}
func (m *CheckRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckRequest.Unmarshal(m, b)
}
func (m *CheckRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckRequest.Marshal(b, m, deterministic)
}
func (dst *CheckRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckRequest.Merge(dst, src)
}
func (m *CheckRequest) XXX_Size() int {
	return xxx_messageInfo_CheckRequest.Size(m)
}
func (m *CheckRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckRequest proto.InternalMessageInfo

func (m *CheckRequest) GetIid() uint32 {
	if m != nil {
		return m.Iid
	}
	return 0
}

func (m *CheckRequest) GetSession() string {
	if m != nil {
		return m.Session
	}
	return ""
}

type CheckResponse struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckResponse) Reset()         { *m = CheckResponse{} }
func (m *CheckResponse) String() string { return proto.CompactTextString(m) }
func (*CheckResponse) ProtoMessage()    {}
func (*CheckResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_gfalcon_c819ad18ad9b78da, []int{3}
}
func (m *CheckResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckResponse.Unmarshal(m, b)
}
func (m *CheckResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckResponse.Marshal(b, m, deterministic)
}
func (dst *CheckResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckResponse.Merge(dst, src)
}
func (m *CheckResponse) XXX_Size() int {
	return xxx_messageInfo_CheckResponse.Size(m)
}
func (m *CheckResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckResponse proto.InternalMessageInfo

func (m *CheckResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func init() {
	proto.RegisterType((*SignInRequest)(nil), "SignInRequest")
	proto.RegisterType((*SignInResponse)(nil), "SignInResponse")
	proto.RegisterType((*CheckRequest)(nil), "CheckRequest")
	proto.RegisterType((*CheckResponse)(nil), "CheckResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GfalconClient is the client API for Gfalcon service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GfalconClient interface {
	SignIn(ctx context.Context, in *SignInRequest, opts ...grpc.CallOption) (*SignInResponse, error)
	Check(ctx context.Context, in *CheckRequest, opts ...grpc.CallOption) (*CheckResponse, error)
}

type gfalconClient struct {
	cc *grpc.ClientConn
}

func NewGfalconClient(cc *grpc.ClientConn) GfalconClient {
	return &gfalconClient{cc}
}

func (c *gfalconClient) SignIn(ctx context.Context, in *SignInRequest, opts ...grpc.CallOption) (*SignInResponse, error) {
	out := new(SignInResponse)
	err := c.cc.Invoke(ctx, "/Gfalcon/SignIn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gfalconClient) Check(ctx context.Context, in *CheckRequest, opts ...grpc.CallOption) (*CheckResponse, error) {
	out := new(CheckResponse)
	err := c.cc.Invoke(ctx, "/Gfalcon/Check", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GfalconServer is the server API for Gfalcon service.
type GfalconServer interface {
	SignIn(context.Context, *SignInRequest) (*SignInResponse, error)
	Check(context.Context, *CheckRequest) (*CheckResponse, error)
}

func RegisterGfalconServer(s *grpc.Server, srv GfalconServer) {
	s.RegisterService(&_Gfalcon_serviceDesc, srv)
}

func _Gfalcon_SignIn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignInRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GfalconServer).SignIn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Gfalcon/SignIn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GfalconServer).SignIn(ctx, req.(*SignInRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gfalcon_Check_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GfalconServer).Check(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Gfalcon/Check",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GfalconServer).Check(ctx, req.(*CheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Gfalcon_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Gfalcon",
	HandlerType: (*GfalconServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SignIn",
			Handler:    _Gfalcon_SignIn_Handler,
		},
		{
			MethodName: "Check",
			Handler:    _Gfalcon_Check_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/gfalcon.proto",
}

func init() { proto.RegisterFile("proto/gfalcon.proto", fileDescriptor_gfalcon_c819ad18ad9b78da) }

var fileDescriptor_gfalcon_c819ad18ad9b78da = []byte{
	// 230 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xc1, 0x4a, 0x03, 0x31,
	0x10, 0x86, 0xbb, 0xa9, 0xb6, 0x75, 0x30, 0x51, 0xc6, 0x4b, 0xd8, 0x8b, 0x92, 0x53, 0x41, 0x88,
	0xa0, 0x37, 0xaf, 0x1e, 0x44, 0x10, 0x84, 0xf8, 0x02, 0xae, 0xdd, 0x58, 0xc3, 0x6a, 0x66, 0xed,
	0xac, 0xf8, 0xfa, 0xd2, 0x34, 0x2b, 0x06, 0x7a, 0x9b, 0x19, 0xf8, 0xbe, 0xfc, 0xf9, 0xe1, 0xac,
	0xdf, 0xd0, 0x40, 0x57, 0xeb, 0xb7, 0xe6, 0x63, 0x45, 0xd1, 0xa6, 0xcd, 0x3c, 0x81, 0x7c, 0x0e,
	0xeb, 0xf8, 0x10, 0x9d, 0xff, 0xfa, 0xf6, 0x3c, 0x20, 0xc2, 0xc1, 0xe0, 0x9b, 0x4f, 0x5d, 0x5d,
	0x54, 0xcb, 0x23, 0x97, 0x66, 0x54, 0x20, 0x42, 0xab, 0x45, 0xba, 0x88, 0xd0, 0x62, 0x0d, 0x8b,
	0xbe, 0x61, 0xfe, 0xa1, 0x4d, 0xab, 0xa7, 0xe9, 0xfa, 0xb7, 0x9b, 0x47, 0x50, 0xa3, 0x90, 0x7b,
	0x8a, 0xec, 0xb7, 0x34, 0x75, 0xc9, 0xb7, 0x70, 0x82, 0x3a, 0x3c, 0x85, 0x69, 0xc8, 0x3a, 0xe9,
	0xb6, 0x23, 0x6a, 0x98, 0xb3, 0x67, 0x0e, 0x14, 0xb3, 0x6e, 0x5c, 0xcd, 0x2d, 0x1c, 0xdf, 0xbd,
	0xfb, 0x55, 0x37, 0xa6, 0xcb, 0x6c, 0xb5, 0x97, 0x15, 0x25, 0x7b, 0x0e, 0x32, 0xb3, 0xfb, 0x83,
	0x5c, 0xbf, 0xc0, 0xfc, 0x7e, 0x57, 0x06, 0x5e, 0xc2, 0x6c, 0x97, 0x1a, 0x95, 0x2d, 0xfa, 0xa8,
	0x4f, 0x6c, 0xf9, 0x1d, 0x33, 0xc1, 0x25, 0x1c, 0x26, 0x31, 0x4a, 0xfb, 0x3f, 0x5c, 0xad, 0x6c,
	0xf1, 0x9e, 0x99, 0xbc, 0xce, 0x52, 0xc9, 0x37, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xc2, 0xba,
	0x88, 0xc1, 0x7b, 0x01, 0x00, 0x00,
}
